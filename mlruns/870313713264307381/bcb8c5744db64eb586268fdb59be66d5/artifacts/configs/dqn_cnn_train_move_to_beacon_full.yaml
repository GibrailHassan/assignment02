# configs/dqn_cnn_train_move_to_beacon_full.yaml
#
# Trains a DQN agent with a Convolutional Neural Network (CNN)
# on the MoveToBeaconEnv (full visual features),
# using the modular network configuration.

experiment_name: "DQN (CNN) on MoveToBeacon (Full Visual)"

# --- Environment Configuration ---
environment:
  name: "MoveToBeaconEnv" # Uses raw screen features.
  params:
    # distance_range: 8 # This was for the env's action space, not directly a network param
    screen_size: 32      # Screen resolution (e.g., 32x32).
    step_mul: 8
    is_visualize: false

# --- Agent Configuration ---
agent:
  name: "DQNAgent"
  params:
    # Agent-specific algorithm params
    enable_ddqn: false
    learning_rate: 0.00025   # From original run_full_move_to_beacon.py
    discount_factor: 0.99    # From original run_full_move_to_beacon.py
    initial_epsilon: 1.0
    epsilon_decay_rate: 0.000009 # Linear decay: (1.0 - 0.1) / 100,000 steps
    epsilon_min: 0.1
    target_update_freq: 1000 # From original run_full_move_to_beacon.py
    memory_capacity: 100000  # From original run_full_move_to_beacon.py
    batch_size: 32           # From original run_full_move_to_beacon.py
    
    # --- Network Configuration ---
    online_network_config:
      name: "CNNNetwork"  # Registered name in networks.factory
      params: {} # Uses default CNN architecture params from networks/architectures.py
                 # Or you can specify custom params for CNNNetwork here, e.g.:
                 # conv_channels: [32, 64, 64]
                 # kernel_sizes: [5, 5, 3]
                 # fc_hidden_size: 512
    
    network_config: # For loading model, should match online_network_config
      name: "CNNNetwork"
      params: {}

# --- Runner Configuration ---
runner:
  total_episodes: 5000 # From original run_full_move_to_beacon.py
  is_training: true
  tensorboard_log_dir: "./logs/dqn_full_env" # From original run_full_move_to_beacon.py
  model_save_dir: "./models"
  save_model_each_episode_num: 100 # From original run_full_move_to_beacon.py
